String.metaClass.encodeURL = {
    java.net.URLEncoder.encode(delegate, "UTF-8")
}

def jreSource = 'https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download'
def jreVersion = '11.0.6_10'
def jreTag = jreVersion.replace('_', '+').encodeURL()
def jreFolder = "jdk-${jreVersion.replace('_', '+')}-jre"

runtime {
    options = ['--compress', '2', '--no-header-files', '--no-man-pages']
    modules = jreModules
    jreDir = file("gazeplay-dist/src/jre")

    targetPlatform('linux-x64', "${buildDir}/jre/linux/${jreFolder}")
    targetPlatform('windows-x64', "${buildDir}/jre/windows/${jreFolder}")
    targetPlatform('macOS', "${buildDir}/jre/mac/${jreFolder}")
}

task downloadLinuxJRE(type: Download) {
    src "${jreSource}/jdk-${jreTag}/OpenJDK11U-jre_x64_linux_hotspot_${jreVersion}.tar.gz"
    dest new File("${buildDir}/jre", 'linux.tar.gz')
}

task downloadWindowsJRE(type: Download) {
    src "${jreSource}/jdk-${jreTag}/OpenJDK11U-jre_x64_windows_hotspot_${jreVersion}.zip"
    dest new File("${buildDir}/jre", 'windows.zip')
}

task downloadMacJRE(type: Download) {
    src "${jreSource}/jdk-${jreTag}/OpenJDK11U-jre_x64_mac_hotspot_${jreVersion}.tar.gz"
    dest new File("${buildDir}/jre", 'mac.tar.gz')
}

task downloadAndUnzipJREs(dependsOn: [downloadLinuxJRE, downloadWindowsJRE, downloadMacJRE]) {
    doLast {
        copy {
            from tarTree(downloadLinuxJRE.dest)
            into "${buildDir}/jre/linux"
        }

        copy {
            from zipTree(downloadWindowsJRE.dest)
            into "${buildDir}/jre/windows"
        }

        copy {
            from tarTree(downloadMacJRE.dest)
            into "${buildDir}/jre/mac"
        }
    }
}

task cleanJre(type: Delete) {
    delete 'gazeplay-dist/src/jre'
}
